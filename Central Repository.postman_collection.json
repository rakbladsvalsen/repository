{
	"info": {
		"_postman_id": "cd46ffa0-b26a-4ce1-92e8-1ee21c4468c9",
		"name": "Central Repository",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "[User] Create superuser",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"if(responseCode.code===201){",
							"    try{",
							"        var result = JSON.parse(responseBody);",
							"        postman.setGlobalVariable(\"CREATED_USERNAME\", result.username)",
							"        postman.setGlobalVariable(\"CREATED_USER_ID\", result.id)",
							"    }catch(e){",
							"        console.error(e);",
							"    }",
							"}"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"function makeId(length = 10){",
							"    var result = \"\";",
							"    var chars = \"ABCDEFGabcdefg1234567890\";",
							"    var selectionableLength = chars.length;",
							"    for(var i = 0; i < length; i++)",
							"        result += chars.charAt(Math.floor(Math.random() * selectionableLength))",
							"    return result;",
							"}",
							"",
							"postman.setGlobalVariable(\"RANDOM\", makeId())",
							"postman.setGlobalVariable(\"RANDOM_COLUMN\", \"Column_\" + makeId())",
							"postman.setGlobalVariable(\"RANDOM_COLUMN_B\", \"Column_\" + makeId())",
							"postman.setGlobalVariable(\"RANDOM_COLUMN_C\", \"Column_\" + makeId())"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{TOKEN}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"username\": \"{{RANDOM}}\",\n    \"password\": \"password\",\n    \"isSuperuser\": true\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{HOST}}/user",
					"host": [
						"{{HOST}}"
					],
					"path": [
						"user"
					]
				}
			},
			"response": []
		},
		{
			"name": "[User] Create user",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"if(responseCode.code===201){",
							"    try{",
							"        var result = JSON.parse(responseBody);",
							"        postman.setGlobalVariable(\"CREATED_USERNAME\", result.username)",
							"        postman.setGlobalVariable(\"CREATED_USER_ID\", result.id)",
							"    }catch(e){",
							"        console.error(e);",
							"    }",
							"}"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"function makeId(length = 10){",
							"    var result = \"\";",
							"    var chars = \"ABCDEFGabcdefg1234567890\";",
							"    var selectionableLength = chars.length;",
							"    for(var i = 0; i < length; i++)",
							"        result += chars.charAt(Math.floor(Math.random() * selectionableLength))",
							"    return result;",
							"}",
							"",
							"postman.setGlobalVariable(\"RANDOM\", makeId())",
							"postman.setGlobalVariable(\"RANDOM_COLUMN\", \"Column_\" + makeId())",
							"postman.setGlobalVariable(\"RANDOM_COLUMN_B\", \"Column_\" + makeId())",
							"postman.setGlobalVariable(\"RANDOM_COLUMN_C\", \"Column_\" + makeId())"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{TOKEN}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"username\": \"{{RANDOM}}\",\n    \"password\": \"123\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{HOST}}/user",
					"host": [
						"{{HOST}}"
					],
					"path": [
						"user"
					]
				}
			},
			"response": []
		},
		{
			"name": "[User] Login superuser",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"if(responseCode.code===200){",
							"    try{",
							"        var result = JSON.parse(responseBody);",
							"        postman.setGlobalVariable(\"TOKEN\", result.token)",
							"    }catch(e){",
							"        console.error(e);",
							"    }",
							"}"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"function makeId(length = 10){",
							"    var result = \"\";",
							"    var chars = \"ABCDEFGabcdefg1234567890\";",
							"    var selectionableLength = chars.length;",
							"    for(var i = 0; i < length; i++)",
							"        result += chars.charAt(Math.floor(Math.random() * selectionableLength))",
							"    return result;",
							"}",
							"",
							"postman.setGlobalVariable(\"RANDOM\", makeId())",
							"postman.setGlobalVariable(\"RANDOM_COLUMN\", \"Column_\" + makeId())",
							"postman.setGlobalVariable(\"RANDOM_COLUMN_B\", \"Column_\" + makeId())",
							"postman.setGlobalVariable(\"RANDOM_COLUMN_C\", \"Column_\" + makeId())"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"username\": \"admin\",\n    \"password\": \"admin\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{HOST}}/login",
					"host": [
						"{{HOST}}"
					],
					"path": [
						"login"
					]
				}
			},
			"response": []
		},
		{
			"name": "[User] Login",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"if(responseCode.code===200){",
							"    try{",
							"        var result = JSON.parse(responseBody);",
							"        postman.setGlobalVariable(\"TOKEN\", result.token)",
							"    }catch(e){",
							"        console.error(e);",
							"    }",
							"}"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"function makeId(length = 10){",
							"    var result = \"\";",
							"    var chars = \"ABCDEFGabcdefg1234567890\";",
							"    var selectionableLength = chars.length;",
							"    for(var i = 0; i < length; i++)",
							"        result += chars.charAt(Math.floor(Math.random() * selectionableLength))",
							"    return result;",
							"}",
							"",
							"postman.setGlobalVariable(\"RANDOM\", makeId())",
							"postman.setGlobalVariable(\"RANDOM_COLUMN\", \"Column_\" + makeId())",
							"postman.setGlobalVariable(\"RANDOM_COLUMN_B\", \"Column_\" + makeId())",
							"postman.setGlobalVariable(\"RANDOM_COLUMN_C\", \"Column_\" + makeId())"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"username\": \"{{CREATED_USERNAME}}\",\n    \"password\": \"password\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{HOST}}/login",
					"host": [
						"{{HOST}}"
					],
					"path": [
						"login"
					]
				}
			},
			"response": []
		},
		{
			"name": "[User] Get self",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"if(responseCode.code===201){",
							"    try{",
							"        var result = JSON.parse(responseBody);",
							"        postman.setGlobalVariable(\"NEW_FORMAT_ID\", result.id)",
							"    }catch(e){",
							"        console.error(e);",
							"    }",
							"}"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"function makeId(length = 10){",
							"    var result = \"\";",
							"    var chars = \"ABCDEFGabcdefg1234567890\";",
							"    var selectionableLength = chars.length;",
							"    for(var i = 0; i < length; i++)",
							"        result += chars.charAt(Math.floor(Math.random() * selectionableLength))",
							"    return result;",
							"}",
							"",
							"postman.setGlobalVariable(\"RANDOM\", makeId())",
							"postman.setGlobalVariable(\"RANDOM_COLUMN\", \"Column_\" + makeId())",
							"postman.setGlobalVariable(\"RANDOM_COLUMN_B\", \"Column_\" + makeId())",
							"postman.setGlobalVariable(\"RANDOM_COLUMN_C\", \"Column_\" + makeId())"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{TOKEN}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"token\": \"{{TOKEN}}\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{HOST}}/user/token/validate",
					"host": [
						"{{HOST}}"
					],
					"path": [
						"user",
						"token",
						"validate"
					]
				}
			},
			"response": []
		},
		{
			"name": "[User] Get by ID",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"if(responseCode.code===201){",
							"    try{",
							"        var result = JSON.parse(responseBody);",
							"        postman.setGlobalVariable(\"NEW_FORMAT_ID\", result.id)",
							"    }catch(e){",
							"        console.error(e);",
							"    }",
							"}"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"function makeId(length = 10){",
							"    var result = \"\";",
							"    var chars = \"ABCDEFGabcdefg1234567890\";",
							"    var selectionableLength = chars.length;",
							"    for(var i = 0; i < length; i++)",
							"        result += chars.charAt(Math.floor(Math.random() * selectionableLength))",
							"    return result;",
							"}",
							"",
							"postman.setGlobalVariable(\"RANDOM\", makeId())",
							"postman.setGlobalVariable(\"RANDOM_COLUMN\", \"Column_\" + makeId())",
							"postman.setGlobalVariable(\"RANDOM_COLUMN_B\", \"Column_\" + makeId())",
							"postman.setGlobalVariable(\"RANDOM_COLUMN_C\", \"Column_\" + makeId())"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{TOKEN}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{HOST}}/user/{{CREATED_USER_ID}}",
					"host": [
						"{{HOST}}"
					],
					"path": [
						"user",
						"{{CREATED_USER_ID}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "[User] Update user",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"if(responseCode.code===201){",
							"    try{",
							"        var result = JSON.parse(responseBody);",
							"        postman.setGlobalVariable(\"NEW_FORMAT_ID\", result.id)",
							"    }catch(e){",
							"        console.error(e);",
							"    }",
							"}"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"function makeId(length = 10){",
							"    var result = \"\";",
							"    var chars = \"ABCDEFGabcdefg1234567890\";",
							"    var selectionableLength = chars.length;",
							"    for(var i = 0; i < length; i++)",
							"        result += chars.charAt(Math.floor(Math.random() * selectionableLength))",
							"    return result;",
							"}",
							"",
							"postman.setGlobalVariable(\"RANDOM\", makeId())",
							"postman.setGlobalVariable(\"RANDOM_COLUMN\", \"Column_\" + makeId())",
							"postman.setGlobalVariable(\"RANDOM_COLUMN_B\", \"Column_\" + makeId())",
							"postman.setGlobalVariable(\"RANDOM_COLUMN_C\", \"Column_\" + makeId())"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{TOKEN}}",
							"type": "string"
						}
					]
				},
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"username\": \"{{RANDOM}}\",\n    \"password\": \"password\",\n    \"isSuperuser\": true\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{HOST}}/user/{{CREATED_USER_ID}}",
					"host": [
						"{{HOST}}"
					],
					"path": [
						"user",
						"{{CREATED_USER_ID}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "[User] Get all",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"if(responseCode.code===201){",
							"    try{",
							"        var result = JSON.parse(responseBody);",
							"        postman.setGlobalVariable(\"NEW_FORMAT_ID\", result.id)",
							"    }catch(e){",
							"        console.error(e);",
							"    }",
							"}"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"function makeId(length = 10){",
							"    var result = \"\";",
							"    var chars = \"ABCDEFGabcdefg1234567890\";",
							"    var selectionableLength = chars.length;",
							"    for(var i = 0; i < length; i++)",
							"        result += chars.charAt(Math.floor(Math.random() * selectionableLength))",
							"    return result;",
							"}",
							"",
							"postman.setGlobalVariable(\"RANDOM\", makeId())",
							"postman.setGlobalVariable(\"RANDOM_COLUMN\", \"Column_\" + makeId())",
							"postman.setGlobalVariable(\"RANDOM_COLUMN_B\", \"Column_\" + makeId())",
							"postman.setGlobalVariable(\"RANDOM_COLUMN_C\", \"Column_\" + makeId())"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{TOKEN}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"token\": \"{{TOKEN}}\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{HOST}}/user",
					"host": [
						"{{HOST}}"
					],
					"path": [
						"user"
					]
				}
			},
			"response": []
		},
		{
			"name": "[User] Delete",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"if(responseCode.code===201){",
							"    try{",
							"        var result = JSON.parse(responseBody);",
							"        postman.setGlobalVariable(\"NEW_FORMAT_ID\", result.id)",
							"    }catch(e){",
							"        console.error(e);",
							"    }",
							"}"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"function makeId(length = 10){",
							"    var result = \"\";",
							"    var chars = \"ABCDEFGabcdefg1234567890\";",
							"    var selectionableLength = chars.length;",
							"    for(var i = 0; i < length; i++)",
							"        result += chars.charAt(Math.floor(Math.random() * selectionableLength))",
							"    return result;",
							"}",
							"",
							"postman.setGlobalVariable(\"RANDOM\", makeId())",
							"postman.setGlobalVariable(\"RANDOM_COLUMN\", \"Column_\" + makeId())",
							"postman.setGlobalVariable(\"RANDOM_COLUMN_B\", \"Column_\" + makeId())",
							"postman.setGlobalVariable(\"RANDOM_COLUMN_C\", \"Column_\" + makeId())"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{TOKEN}}",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{HOST}}/user/{{CREATED_USER_ID}}",
					"host": [
						"{{HOST}}"
					],
					"path": [
						"user",
						"{{CREATED_USER_ID}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "[User] Get all upload sessions",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"if(responseCode.code===201){",
							"    try{",
							"        var result = JSON.parse(responseBody);",
							"        postman.setGlobalVariable(\"NEW_FORMAT_ID\", result.id)",
							"    }catch(e){",
							"        console.error(e);",
							"    }",
							"}"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"function makeId(length = 10){",
							"    var result = \"\";",
							"    var chars = \"ABCDEFGabcdefg1234567890\";",
							"    var selectionableLength = chars.length;",
							"    for(var i = 0; i < length; i++)",
							"        result += chars.charAt(Math.floor(Math.random() * selectionableLength))",
							"    return result;",
							"}",
							"",
							"postman.setGlobalVariable(\"RANDOM\", makeId())",
							"postman.setGlobalVariable(\"RANDOM_COLUMN\", \"Column_\" + makeId())",
							"postman.setGlobalVariable(\"RANDOM_COLUMN_B\", \"Column_\" + makeId())",
							"postman.setGlobalVariable(\"RANDOM_COLUMN_C\", \"Column_\" + makeId())"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{TOKEN}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"token\": \"{{TOKEN}}\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{HOST}}/upload_session?orderBy=createdAt",
					"host": [
						"{{HOST}}"
					],
					"path": [
						"upload_session"
					],
					"query": [
						{
							"key": "orderBy",
							"value": "createdAt"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "[Format] Create",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"if(responseCode.code===201){",
							"    try{",
							"        var result = JSON.parse(responseBody);",
							"        postman.setGlobalVariable(\"NEW_FORMAT_ID\", result.id)",
							"    }catch(e){",
							"        console.error(e);",
							"    }",
							"}"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"function makeId(length = 10){",
							"    var result = \"\";",
							"    var chars = \"ABCDEFGabcdefg1234567890\";",
							"    var selectionableLength = chars.length;",
							"    for(var i = 0; i < length; i++)",
							"        result += chars.charAt(Math.floor(Math.random() * selectionableLength))",
							"    return result;",
							"}",
							"",
							"postman.setGlobalVariable(\"RANDOM\", makeId())",
							"postman.setGlobalVariable(\"RANDOM_COLUMN\", \"Column_\" + makeId())",
							"postman.setGlobalVariable(\"RANDOM_COLUMN_B\", \"Column_\" + makeId())",
							"postman.setGlobalVariable(\"RANDOM_COLUMN_C\", \"Column_\" + makeId())"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{TOKEN}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\": \"Random format {{RANDOM}}\", \n    \"description\": \"A nice random format - {{RANDOM}}\",\n    \"schema\": [\n        {\n            \"name\": \"Column_8bGCFff2cC\",\n            \"kind\": \"Number\"            \n        },\n        {\n            \"name\": \"Column_8bGCFff2cZ\",\n            \"kind\": \"String\"\n        }\n\n    ]\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{HOST}}/format",
					"host": [
						"{{HOST}}"
					],
					"path": [
						"format"
					]
				}
			},
			"response": []
		},
		{
			"name": "[Format] Get format by ID",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{TOKEN}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{HOST}}/format/{{NEW_FORMAT_ID}}",
					"host": [
						"{{HOST}}"
					],
					"path": [
						"format",
						"{{NEW_FORMAT_ID}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "[Format] Delete format by ID",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{TOKEN}}",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{HOST}}/format/{{NEW_FORMAT_ID}}",
					"host": [
						"{{HOST}}"
					],
					"path": [
						"format",
						"{{NEW_FORMAT_ID}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "[Format] Get available formats",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{TOKEN}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Basic {{TOKEN}}",
						"type": "default"
					}
				],
				"url": {
					"raw": "{{HOST}}/format?page=0&perPage=200&orderBy=-createdAt",
					"host": [
						"{{HOST}}"
					],
					"path": [
						"format"
					],
					"query": [
						{
							"key": "page",
							"value": "0"
						},
						{
							"key": "perPage",
							"value": "200"
						},
						{
							"key": "orderBy",
							"value": "-createdAt"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "[Format] Upload data",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{TOKEN}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"formatId\": {{NEW_FORMAT_ID}},\n    \"data\": [\n        {\n            \"Column_8bGCFff2cC\": 12132123,\n            \"Column_8bGCFff2cZ\": \"zzz\"\n        }\n    ]\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{HOST}}/record",
					"host": [
						"{{HOST}}"
					],
					"path": [
						"record"
					]
				}
			},
			"response": []
		},
		{
			"name": "[Format] Filtered data",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{TOKEN}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"uploadSession\":{\n        \"createdAtGte\": \"2023-04-19T02:38:01.528Z\"\n    },\n    \"query\": [\n        {\n            \"args\": [\n                {\n                    \"column\": \"Column_8bGCFff2cC\",\n                    \"comparisonOperator\": \"eq\",\n                    \"compareAgainst\": 12132123\n                }\n            ]\n        }\n    ]\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{HOST}}/record/filter?perPage=1&debug=true",
					"host": [
						"{{HOST}}"
					],
					"path": [
						"record",
						"filter"
					],
					"query": [
						{
							"key": "perPage",
							"value": "1"
						},
						{
							"key": "debug",
							"value": "true"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "[Entitlements] Create",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{TOKEN}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"userId\": {{CREATED_USER_ID}},\n    \"formatId\": {{NEW_FORMAT_ID}},\n    \"access\": \"readWrite\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{HOST}}/entitlement",
					"host": [
						"{{HOST}}"
					],
					"path": [
						"entitlement"
					]
				}
			},
			"response": []
		},
		{
			"name": "[Entitlements] Get all available",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{TOKEN}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{HOST}}/entitlement",
					"host": [
						"{{HOST}}"
					],
					"path": [
						"entitlement"
					]
				}
			},
			"response": []
		},
		{
			"name": "[Entitlements] Delete",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{TOKEN}}",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"userId\": {{CREATED_USER_ID}},\n    \"formatId\": {{NEW_FORMAT_ID}}\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{HOST}}/entitlement",
					"host": [
						"{{HOST}}"
					],
					"path": [
						"entitlement"
					]
				}
			},
			"response": []
		}
	]
}